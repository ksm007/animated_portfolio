{"version":3,"file":"animation-vendor-CyiohohI.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/debug/record.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.10\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (jsx(Fragment, { children: childrenToRender.map((child) => (jsx(PresenceChild, { isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)))) }));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (jsx(PresenceChild, { isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (jsx(PresenceChild, { isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (jsx(Fragment, { children: exitingChildren.size\n            ? childrenToRender\n            : childrenToRender.map((child) => cloneElement(child)) }));\n};\n\nexport { AnimatePresence };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { invariant } from '../../utils/errors.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","MotionConfigContext","createContext","MotionContext","PresenceContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","process","index","createRenderStep","runNextFrame","thisFrame","nextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","callback","keepAlive","immediate","addToCurrentFrame","queue","frameData","i","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","state","steps","acc","key","processStep","stepId","processBatch","timestamp","wake","microtask","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","useInsertionEffect","wantsHandoff","isRefObject","ref","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","featureProps","featureDefinitions","loadFeatures","features","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","initialLayoutGroupConfig","isStrict","jsxs","jsx","ForwardRefComponent","forwardRef","layoutId","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","isMotionValue","value","translateAlias","numTransforms","buildTransform","transform","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","transformName","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","getValueAsType","type","clamp","min","max","number","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","buildHTMLStyles","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","prevProps","_a","newValues","scrapeMotionValuesFromProps$1","targetKey","getValueState","resolveVariantFromProps","definition","current","velocity","useConstant","init","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","addDomEvent","eventName","handler","isPrimaryPointer","event","extractEventInfo","pointType","addPointerInfo","addPointerEvent","combineFunctions","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","handleEvent","info","HoverGesture","FocusGesture","isFocusVisible","isNodeOrChild","child","fireSyntheticPointerEvent","syntheticPointerEvent","PressGesture","startEvent","startInfo","removePointerUpListener","endEvent","endInfo","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","handleKeydown","keydownEvent","handleKeyup","keyupEvent","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","criticallyDampedSpring","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","elapsed","getValueTransition","isNotNull","getFinalKeyframe","finalKeyframe","resolvedKeyframes","now","clearTime","time","newTime","isZeroValueString","isNone","invariant","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","token1","token2","fallback","getVariableValue","depth","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","x","paddingLeft","paddingRight","y","paddingTop","paddingBottom","top","left","testValueType","auto","dimensionValueTypes","findDimensionValueType","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","currentValue","valueAsRead","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","hex","hsla","hue","saturation","lightness","color","test","_b","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","types","split","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","noneKeyframeIndexes","animatableTemplate","keyframe","noneIndex","DOMKeyframesResolver","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","hasKeyframesChanged","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","BaseAnimation","autoplay","delay","onUpdate","isGenerator","resolvedAnimation","resolve","reject","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","duration","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","initialGuess","approximateRoot","stiffness","rootIterations","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","spring","restDelta","restSpeed","damping","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","easeIn","easeOut","easeInOut","isEasingArray","mirrorEasing","easing","reverseEasing","circIn","circOut","circInOut","backOut","backIn","backInOut","anticipate","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","hslaToRgba","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixVisibility","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","arr","convertOffsetToTimes","o","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","frameloopDriver","update","passTimestamp","generators","percentToProgress","MainThreadAnimation","KeyframeResolver$1","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","calculatedDuration","resolvedDuration","totalDuration","sample","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","newSpeed","hasChanged","driver","onPlay","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","animateStyle","valueName","keyframeOptions","supportsWaapi","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","AcceleratedAnimation","pregeneratedAnimation","animation","timeline","sampleTime","observeTimeline","prevProgress","onFrame","currentTime","supportsScrollTimeline","GroupPlaybackControls","animations","onResolve","onReject","propName","newValue","cancelAll","cancelTimeline","speed","methodName","controls","animateMotionValue","isHandoff","valueTransition","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","numSubscriptions","MAX_VELOCITY_DELTA","isFloat","MotionValue","render","prevFrameValue","subscription","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","setMotionValue","setTarget","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animationTypeState","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","AnimationFeature","prevAnimate","id","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","getPanInfo","isPanStarted","isDistancePastThreshold","point","onStart","onMove","transformPoint","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","getContextWindow","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","usePresence","useId","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","safeToRemove","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotate","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","compareByDepth","FlatTree","timeout","start","checkElapsed","record","data","isSVGElement","animateSingleValue","motionValue$1","transformAxes","hiddenVisibility","animationTarget","projectionFrameData","resetDistortingTransform","sharedAnimationValues","isOptimisedAppearTree","projectionNode","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","args","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasDistortingTransform","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","visualElementStore","valueTypes","findValueType","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","initialMotionValues","remove","valueIsTransform","removeOnChange","removeOnRenderRequest","other","renderedProps","ProjectionNodeConstructor","isEnabled","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","layoutScroll","layoutRoot","feature","listenerName","listener","startAtParent","closestVariantNode","valueFromInitial","DOMVisualElement","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion","useIsMounted","isMounted","useForceUpdate","forcedRenderCount","setForcedRenderCount","useState","forceRender","PopChildMeasure","React.Component","PopChild","nonce","width","height","React.cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","isComplete","_","React.useEffect","useUnmountEffect","getChildKey","updateChildLookup","allChildren","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","filteredChildren","childrenToRender","exitingChildren","presentChildren","presentKeys","targetKeys","numPresent","component","insertionIndex","exitingComponent","onExit","leftOverKeys","childKey","leftOverKey","presentChild","presentChildKey","cloneElement","resolveElements","elements","scope","selectorCache","stopAnimation","setVariants","variantLabels","setValues","animationControls","subscribers","useAnimationControls","useAnimation","thresholds","inView","elementOrSelector","activeIntersections","onIntersectionChange","newOnEnd","observer","useInView","margin","isInView","setInView","onEnter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227]}